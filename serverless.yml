service: nodejs-assignment

custom:
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      docker: true
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
provider:
  name: aws
  runtime: nodejs14.19
  region: eu-west-1
  environment:
    APP_NAME: ${self:service}
    AWS_ACCESS_KEY_ID: id_key
    AWS_SECRET_ACCESS_KEY: access_key
    LOANS_TABLE_NAME: loansTable

package:
  exclude:
    - .env
    - coverage/**
    - .dynamodb
  include:
    - build/**

plugins:
  - serverless-pseudo-parameters
  - serverless-dynamodb-local
  - serverless-offline

functions:
  createLoan:
    name: createLoan
    handler: build/app1/createLoan.handler
    events:
      - http:
          path: /create/{amount}
          method: get

  function2:
    name: function2
    handler: src/app1/functions.function2
    events:
      - http:
          path: /delete/{id}
          method: get

  function3:
    name: function3
    handler: src/app1/functions.function3
    events:
      - http:
          path: /all
          method: get

  function4:
    name: function4
    handler: src/app1/functions.function4
    events:
      - http:
          path: /disburse/{id}
          method: get

resources:
  Resources:
    loansTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: loansTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1